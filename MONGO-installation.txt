MongoDB installation:
Install MongoDB Community Edition
Follow these steps to install MongoDB Community Edition using the apt package manager.
1
Import the public key used by the package management system.
From a terminal, issue the following command to import the MongoDB public GPG Key from https://www.mongodb.org/static/pgp/server-4.4.asc:
wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
The operation should respond with an OK.
However, if you receive an error indicating that gnupg is not installed, you can:
Install gnupg and its required libraries using the following command:
sudo apt-get install gnupg
Once installed, retry importing the key:
wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
2
Create a list file for MongoDB.
Create the list file /etc/apt/sources.list.d/mongodb-org-4.4.list for your version of Ubuntu.
Click on the appropriate tab for your version of Ubuntu. If you are unsure of what Ubuntu version the host is running, open a terminal or shell on the host and execute lsb_release -dc.
Ubuntu 20.04 (Focal)	Ubuntu 18.04 (Bionic)	Ubuntu 16.04 (Xenial)
The following instruction is for Ubuntu 20.04 (Focal).
Create the /etc/apt/sources.list.d/mongodb-org-4.4.list file for Ubuntu 20.04 (Focal):
echo “deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse” | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
3
Reload local package database.
Issue the following command to reload the local package database:
sudo apt-get update
4
Install the MongoDB packages.
You can install either the latest stable version of MongoDB or a specific version of MongoDB.
Install the latest version of MongoDB.	Install a specific release of MongoDB.
To install the latest stable version, issue the following
sudo apt-get install -y mongodb-org
Optional. Although you can specify any available version of MongoDB, apt-get will upgrade the packages when a newer version becomes available. To prevent unintended upgrades, you can pin the package at the currently installed version:
echo “mongodb-org hold” | sudo dpkg --set-selections
echo “mongodb-org-server hold” | sudo dpkg --set-selections
echo “mongodb-org-shell hold” | sudo dpkg --set-selections
echo “mongodb-org-mongos hold” | sudo dpkg --set-selections
echo “mongodb-org-tools hold” | sudo dpkg --set-selections
For help with troubleshooting errors encountered while installing MongoDB on Ubuntu, see our troubleshooting guide.
Run MongoDB Community Edition
ulimit Considerations
Most Unix-like operating systems limit the system resources that a process may use. These limits may negatively impact MongoDB operation, and should be adjusted. See UNIX ulimit Settings for the recommended settings for your platform.
NOTE
Starting in MongoDB 4.4, a startup error is generated if the ulimit value for number of open files is under 64000.
Directories
If you installed via the package manager, the data directory /var/lib/mongodb and the log directory /var/log/mongodb are created during the installation.
By default, MongoDB runs using the mongodb user account. If you change the user that runs the MongoDB process, you must also modify the permission to the data and log directories to give this user access to these directories.
Configuration File
The official MongoDB package includes a configuration file (/etc/mongod.conf). These settings (such as the data directory and log directory specifications) take effect upon startup. That is, if you change the configuration file while the MongoDB instance is running, you must restart the instance for the changes to take effect.
Procedure
Follow these steps to run MongoDB Community Edition on your system. These instructions assume that you are using the official mongodb-org package – not the unofficial mongodb package provided by Ubuntu – and are using the default settings.
Init System
To run and manage your mongod process, you will be using your operating system’s built-in init system. Recent versions of Linux tend to use systemd (which uses the systemctl command), while older versions of Linux tend to use System V init (which uses the service command).
If you are unsure which init system your platform uses, run the following command:
ps --no-headers -o comm 1
Then select the appropriate tab below based on the result:
systemd - select the systemd (systemctl) tab below.
init - select the System V Init (service) tab below.
systemd (systemctl)	System V Init (service)
1
Start MongoDB.
You can start the mongod process by issuing the following command:
sudo systemctl start mongod
If you receive an error similar to the following when starting mongod:
Failed to start mongod.service: Unit mongod.service not found.
Run the following command first:
sudo systemctl daemon-reload
Then run the start command above again.
2
Verify that MongoDB has started successfully.
sudo systemctl status mongod
You can optionally ensure that MongoDB will start following a system reboot by issuing the following command:
sudo systemctl enable mongod
3
Stop MongoDB.
As needed, you can stop the mongod process by issuing the following command:
sudo systemctl stop mongod
4
Restart MongoDB.
You can restart the mongod process by issuing the following command:
sudo systemctl restart mongod
You can follow the state of the process for errors or important messages by watching the output in the /var/log/mongodb/mongod.log file.
5
Begin using MongoDB.
Start a mongo shell on the same host machine as the mongod. You can run the mongo shell without any command-line options to connect to a mongod that is running on your localhost with default port 27017:
mongo
For more information on connecting using the mongo shell, such as to connect to a mongod instance running on a different host and/or port, see The mongo Shell.
To help you start using MongoDB, MongoDB provides Getting Started Guides in various driver editions. See Getting Started for the available editions.
